ss <- subset(x, Ozone == 20 & Temp > 80)
ss
ss <- subset(x, Ozone == 20 & Temp >= 80)
ss
ss <- subset(x, Ozone > 31 & Temp > 90)
ss
mean(ss$Solar.R)
ss<-subset(x, Month == 6)
ss
mean(ss$Temp)
ss<-subset(x, Month == 5)
max(ss$Ozone)
max(ss$Ozone, na.rm = TRUE)
y <- 4L
class(y)
y <- c(4, "a", TRUE)
class(y)
a <- c(1,3, 5)
b <- c(3, 2, 10)
cbind(a,b)
a <- list(2, "a", "b", TRUE)
a[[1]]
class(a[[1]])
a <- 1:4
b <- 2
a + b
b <- c(3, 5, 1, 10, 12, 6)
b[b < 6] <- 0
b
head(x, 2)
tail(x, 2)
x[47, 'Ozone']
mean(x$Ozone, na.rm = TRUE)
x18 <- subset(x, Ozone>31 & Temp > 90)
mean(x18$Solar.R)
x19 <- subset(x, Month==6)
mean(x19$Temp)
x20 <- subset(x, Month==5)
max(x20$Ozone, na.rm = TRUE)
R.version.string
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
list.files()
?list.files
args(list.files)
old.dir <- pwd()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", file.path("testdir2", "testdir3"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd("..")
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect(num_vect<1)
tf <- num_vect[num_vect<1]
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "ligang")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
name(vect2) <- c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating","test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE==TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 != 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identital("twins", "twins")
identical("twins", "twins")
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(x<0)
any(ints<0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
play()
nxt()
submit()
boring_function('My first function!')
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evalute(function(x){x[[1]]}, c(8,4,0))
evaluate(function(x){x[[1]]}, c(8,4,0))
evaluate(function(x){tail(x,1)}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit("hello", "world")
telegram("hello", "world")
submit()
mad_libs(place="new york", adjective="good", noun="car")
submit()
"I" %p% "love" %p% "R!"
x <- 1:10
x
if (x>5) {}
if (x>5) { x<-0 }
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- pollutantmean('','')
source('pollutantmean.R')
x <- pollutantmean('','')
x
x <- pollutantmean('','')
x
source('pollutantmean.R')
x <- pollutantmean('','')
gwd()
getwd()
source('pollutantmean.R')
x <- pollutantmean('','')
x
d <- data.frame(x = 1, y = 1)
d
d1 <- data.frame(x = 1, y = 1)
d2 <- data.frame(x = 2, y = 2)
d3 <- rbind(d1, d2)
d3
getwd()
file.path(getwd(), 'specdata')
directory <- getwd()
source('pollutantmean.R')
x <- pollutantmean(directory,'')
directory <- file.path(getwd(), 'specdata')
x <- pollutantmean(directory,'')
x
i = 300
i <- 300
toString(i) + '.csv'
toString(i)
toString(i, "%d.csv")
paste(i, ".csv")
paste(i, ".csv", collapse = '')
paste("1", "2", collapse = NULL)
paste("1", "2", collapse = '')
paste("1", "2", collapse = ',')
paste("1", "2", sep = ',')
paste("1", "2", sep = '')
paste(i, ".csv", sep='')
data.frame()
source('pollutantmean.R')
x <- pollutantmean(directory,1:2)
x <- pollutantmean(directory,1:2)
source('pollutantmean.R')
x <- pollutantmean(directory,1:2)
source('pollutantmean.R')
x <- pollutantmean(directory,1:2)
x
x <- pollutantmean(directory,'', 1:2)
x
source('pollutantmean.R')
x <- pollutantmean(directory,'', 1:2)
df <- data.frame(x=1, y=1)
mean(df$x)
mean(df["x"])
d[,"x"]
mean(d[,"x"])
source('pollutantmean.R')
x <- pollutantmean('specdata','sulfate', 1:10)
x
x <- pollutantmean('specdata','sulfate', 1:10)
x
df = data.frame(x=c(1,2,3), y=c(4,5,6))
df[,"x"]
df = data.frame(x=c(1,2,3), y=c(4,5,NA))
mean(df[,"y"])
mean(df[,"y"], na.rm = TRUE)
b = "y"
b <- "y"
mean(df[,b], na.rm = TRUE)
x <- pollutantmean('specdata','sulfate', 1:10)
x
x <- pollutantmean('specdata','sulfate', 1:1)
x
source('pollutantmean.R')
x <- pollutantmean('specdata','sulfate', 1:1)
x
pollutantmean('specdata','sulfate', 1:10)
pollutantmean('specdata','nitrate', 70:72)
pollutantmean('specdata','nitrate', 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
3
submit()
submit()
x = data.frame(x=c(1,2), y = c(10,20))
rbind(x, c(x=3, y=30))
soure('complete.R')
source('complete.R')
complete("specdata", 1)
source('complete.R')
complete("specdata", 1)
data.frame()
data.frame(matrix(vector(), 0, 2, dimnames=list(c(), c("id", "nobs"))))
df <- data.frame(matrix(vector(), 0, 2, dimnames=list(c(), c("id", "nobs"))))
rbind(df, c(id=1, nobs=23))
rbind(df, data.frame(id=1, nobs=23))
df<-data.frame()
rbind(df, data.frame(id=1, nobs=23))
source('complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
source("corr.R")
source("corr.R")
corr("specdata")
?cor
cor(c(1,2,3), c(4,5,6))
cor(c(1,2,3), c(4,5,-6))
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
head(cr)
summary(c())
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
submit()
submit()
submit()
help("<<-")
x = numberic()
x = numeric()
x
x = numeric(10)
x
class(x)
x <- matrix()
x
source("../ProgrammingAssignments/cachematrix.R")
getwd()
source("../ProgrammingAssignment2/cachematrix.R")
m = matrix(1:9, nrows=3, ncols=3)
m = matrix(1:9, nrow=3, ncol=3)
m1 = solve(m)
m = matrix(c(1,5,2,34,32,23,12,23,78), nrow=3, ncol=3)
m
m1 <- solve(m)
m1
m1 * m
m * m1
m
m %*% m1
m1 %*% m
cm <- makeCacheMatrix(m)
cacheSolve(cm)
cacheSolve(m)
cacheSolve(cm)
library(datasets)
data("iris")
data(iris)
?iris
irris
iris
subset(iris, Species = 'virginica')
subset(iris, Species == 'virginica')
class(iris)
clear
cls
clean
q1 <- subset(iris, Species == 'virginica')
q1
mean(q1$Sepal.Length)
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
mtcars
?tapply
class(mtcars)
?sapply
?apply
apply(mtcars, 2, mean)
?lapply
?tapply
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
q4 <- tapply(mtcars$hp, mtcars$cyl, mean)
class(q4)
q4(1)
q4[1]
q4[1] - q4[3]
debug(ls)
?ls
ls()
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
rep(0:1, each=5)
y <- function(x){}
y <- function(x){}
?return
setwd('.\data')
setwd('./data')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "pid.csv")
acs <- read.csv("pid.csv")
install.packages("sqldf")
head(acs)
size(acs)
shape(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html ")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
html <- readLines(con)
close(con )
html
html[10]
nchar(html[10])
nchar(html[20])
nchar(html[30])
nchar(html[100])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "wksst81.for")
data <- read.fortran("wksst81.for")
data <- read.fortran("wksst81.for", C("A9", "F4.1","F4.1","F4.1","F4.1","F4.1","F4.1","F4.1","F4.1"), header=FALSE, skip=4)
data <- read.fortran("wksst81.for", format=C("A9", "F4.1","F4.1","F4.1","F4.1","F4.1","F4.1","F4.1","F4.1"), header=FALSE, skip=4)
data <- read.fwf("wksst81.for", widths=c(14, 4,9, 4,9, 4,9, 4, 4), skip=4)
head(data)
data <- read.fwf("wksst81.for", widths=c(12, 7,4, 9,4, 9,4, 9,4), skip=4)
head(data)
data$V4
sum(data$v4)
sum(data$V1)
sum(data$V4)
data <- read.fwf("wksst81.for", widths=c(12, 7,4, 9,4, 9,4, 9,4), skip=4)
data
data <- read.fwf("wksst81.for", widths=c(15, 4,9, 4,9, 4,9, 4, 4), skip=4)
data$V4
